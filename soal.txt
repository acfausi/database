1.	Tampilkan produk yang asset nya diatas 20jt
SELECT * FROM produk WHERE harga_beli * stok > 20000000; 
2.	Tampilkan data produk beserta selisih stok dengan minimal stok
SELECT SUM(stok - min_stok) as selisih from produk;
3.	Tampilkan total asset produk secara keseluruhan
SELECT sum(stok) as total_asset from produk;
4.	Tampilkan data pelanggan yang lahirnya antara tahun 1999 sampai 2004
SELECT * FROM pelanggan WHERE YEAR(tgl_lahir) BETWEEN 1999 AND 2004;
5.	Tampilkan data pelanggan yang lahirnya tahun 1998
SELECT * FROM pelanggan WHERE YEAR(tgl_lahir)=1998;
6.	Tampilkan data pelanggan yang berulang tahun bulan agustus
SELECT * FROM pelanggan WHERE MONTH(tgl_lahir)=08;
7.	Tampilkan data pelanggan : nama, tmp_lahir, tgl_lahir dan umur (selisih tahun sekarang dikurang tahun kelahiran)
SELECT nama, tmp_lahir, tgl_lahir, (YEAR(NOW())-YEAR(tgl_lahir)) AS umur FROM pelanggan;

SOAL 3.2
1.	Berapa jumlah pelanggan yang tahun lahirnya 1998
SELECT COUNT(*) FROM pelanggan WHERE YEAR(tgl_lahir) = 1998;
+----------+
| COUNT(*) |
+----------+
|        0 |
+----------+

2.	Berapa jumlah pelanggan perempuan yang tempat lahirnya di Jakarta
SELECT COUNT(*) FROM pelanggan WHERE jk = 'P' AND tmp_lahir LIKE '%Jakarta%';
+----------+
| COUNT(*) |
+----------+
|        0 |
+----------+

3.	Berapa jumlah total stok semua produk yang harga jualnya dibawah 10rb
 SELECT nama, harga_jual FROM produk WHERE stok > 0 AND harga_jual < 10000;
+------+------------+
| nama | harga_jual |
+------+------------+
| TV   |       6999 |
+------+------------+

4.	Ada berapa produk yang mempunyai kode awal K
 SELECT COUNT(*) FROM produk WHERE kode LIKE "K%";
+----------+
| COUNT(*) |
+----------+
|        1 |

5.	Berapa harga jual rata-rata produk yang diatas 1jt
 SELECT AVG(harga_jual) FROM produk WHERE harga_jual > 1000000;
+--------------------+
| AVG(harga_jual)    |
+--------------------+
| 3066666.6666666665 |
6.	Tampilkan jumlah stok yang paling besar
SELECT MAX(stok) FROM produk;
+-----------+
| MAX(stok) |
+-----------+
|        10 |
+-----------+
7.	Ada berapa produk yang stoknya kurang dari minimal stok
 SELECT * FROM produk WHERE stok < min_stok;
+----+-------+--------+------------+------------+------+----------+-----------------+
| id | kode  | nama   | harga_beli | harga_jual | stok | min_stok | jenis_produk_id |
+----+-------+--------+------------+------------+------+----------+-----------------+
|  1 | 1112  | Kulkas |     200000 |     500000 |    2 |        4 |               4 |
|  2 | 1113  | Lemari |     800000 |     600000 |    2 |        3 |               5 |
|  3 | 1114  | Meja   |    1200000 |     500000 |    2 |        3 |               2 |
|  9 | 117   | gas    |     200000 |     500000 |   10 |       13 |               3 |
| 12 | 1119  | gas    |     200000 |     500000 |   10 |       13 |               3 |
| 13 | M111  | boom   |      20000 |     500000 |    4 |        6 |               9 |
| 16 | K112` | dus    |     400000 |    7000000 |    7 |        9 |              10 |
| 19 | 1010  | TV     |       3990 |       6999 |    7 |        9 |               6 |
+----+-------+--------+------------+------------+------+----------+-----------------+
8.	Berapa total asset dari keseluruhan produk
 SELECT SUM(harga_beli * stok) AS "total asset" FROM produk
    -> ;
+-------------+
| total asset |
+-------------+
|    20607930 |
+-------------+

SOAL 3.3
1.	Tampilkan data produk : id, nama, stok dan informasi jika stok telah sampai batas minimal atau kurang dari minimum stok dengan informasi ‘segera belanja’ jika tidak ‘stok aman’.
SELECT id, nama, stok,
    ->   CASE
    -> WHEN min_stok <= 10 THEN 'segera belanja'
    -> ELSE 'stok aman'
    -> END AS status_stok
    -> FROM produk;
+----+--------------+------+----------------+
| id | nama         | stok | status_stok    |
+----+--------------+------+----------------+
|  1 | Kulkas       |    2 | segera belanja |
|  2 | Lemari       |    2 | segera belanja |
|  3 | Meja         |    2 | segera belanja |
|  4 | Kasur        |    4 | segera belanja |
|  5 | Meja Belajar |    1 | segera belanja |
|  9 | gas          |   10 | stok aman      |
| 10 | sandal       |   10 | segera belanja |
| 12 | gas          |   10 | stok aman      |
| 13 | boom         |    4 | segera belanja |
| 16 | dus          |    7 | segera belanja |
| 19 | TV           |    7 | segera belanja |
+----+--------------+------+----------------+
2.	Tampilkan data pelanggan: id, nama, umur dan kategori umur : jika umur < 17 → ‘muda’ , 17-55 → ‘Dewasa’, selainnya ‘Tua’
SELECT id,nama_pelanggan,tgl_lahir,
    ->   CASE
    ->     WHEN tgl_lahir < 17 THEN 'muda'
    ->     WHEN tgl_lahir >= 17 AND tgl_lahir <= 55 THEN 'Dewasa'
    ->   END AS "kategori_umur"
    -> FROM pelanggan;
+----+----------------+------------+---------------+
| id | nama_pelanggan | tgl_lahir  | kategori_umur |
+----+----------------+------------+---------------+
|  7 | Agung          | 30-12-1999 | Dewasa        |
|  8 | Fausi          | 10-10-1999 | muda          |
|  9 | Rian           | 20-03-2000 | Dewasa        |
| 10 | Santi          | 10-05-2000 | muda          |
+----+----------------+------------+---------------+
3.	Tampilkan data produk: id, kode, nama, dan bonus untuk kode ‘TV01’ →’DVD Player’ , ‘K001’ → ‘Rice Cooker’ selain dari diatas ‘Tidak Ada’
 SELECT id, kode, nama,
    ->   CASE kode
    ->     WHEN 'TV01' THEN 'DVD Player'
    ->     WHEN 'K001' THEN 'Rice Cooker'
    ->     ELSE 'Tidak Ada'
    ->   END AS bonus
    -> FROM produk;
+----+-------+--------------+-----------+
| id | kode  | nama         | bonus     |
+----+-------+--------------+-----------+
|  1 | 1112  | Kulkas       | Tidak Ada |
|  2 | 1113  | Lemari       | Tidak Ada |
|  3 | 1114  | Meja         | Tidak Ada |
|  4 | 1115  | Kasur        | Tidak Ada |
|  5 | 1116  | Meja Belajar | Tidak Ada |
|  9 | 117   | gas          | Tidak Ada |
| 10 | 1118  | sandal       | Tidak Ada |
| 12 | 1119  | gas          | Tidak Ada |
| 13 | M111  | boom         | Tidak Ada |
| 16 | K112` | dus          | Tidak Ada |
| 19 | 1010  | TV           | Tidak Ada |
+----+-------+--------------+-----------+


SOAL 3.4
1.	Tampilkan data statistik jumlah tempat lahir pelanggan
SELECT tmp_lahir, COUNT(*) as "jumlah pelanggan"
    -> FROM pelanggan
    ->
    -> GROUP BY tmp_lahir;
+-----------+------------------+
| tmp_lahir | jumlah pelanggan |
+-----------+------------------+
| Bandung   |                3 |
| Jakarta   |                1 |
+-----------+------------------+
2.	Tampilkan jumlah statistik produk berdasarkan jenis produk
SELECT jenis_produk_id, COUNT(*) as jumlah_produk
    -> FROM produk
    -> GROUP BY jenis_produk_id;
+-----------------+---------------+
| jenis_produk_id | jumlah_produk |
+-----------------+---------------+
|               1 |             1 |
|               2 |             1 |
|               3 |             2 |
|               4 |             1 |
|               5 |             1 |
|               6 |             1 |
|               9 |             1 |
|              10 |             2 |
|              11 |             1 |
+-----------------+---------------+
9 rows in set (0.004 sec)
3.	Tampilkan data pelanggan yang usianya dibawah rata usia pelanggan
SELECT id, nama_pelanggan, tgl_lahir
    -> FROM pelanggan
    -> WHERE tgl_lahir < (SELECT AVG(tgl_lahir) FROM pelanggan);
+----+----------------+------------+
| id | nama_pelanggan | tgl_lahir  |
+----+----------------+------------+
|  8 | Fausi          | 10-10-1999 |
| 10 | Santi          | 10-05-2000 |
+----+----------------+------------+
4.	Tampilkan data produk yang harganya diatas rata-rata harga produk
 SELECT id, nama, harga_jual
    -> FROM produk
    -> WHERE harga_jual > (SELECT AVG(harga_jual) FROM produk);
+----+------+------------+
| id | nama | harga_jual |
+----+------+------------+
| 16 | dus  |    7000000 |
+----+------+------------+
5.	Tampilkan data pelanggan yang memiliki kartu dimana iuran tahunan kartu diatas 90rb
SELECT pelanggan.id, pelanggan.nama_pelanggan, kartu.kode, kartu.iuran
    -> FROM pelanggan
    -> JOIN kartu ON pelanggan.kartu_id = kartu.id
    -> WHERE kartu.iuran > 90000;
Empty set (0.045 sec)
6.	Tampilkan statistik data produk dimana harga produknya dibawah rata-rata harga produk secara keseluruhan
SELECT COUNT(*) AS jumlah_produk, MIN(harga_jual) AS harga_minimal, MAX(harga_jual) AS harga_maksimal, 
    ->     AVG(harga_jual) AS rata_rata_harga FROM produk
    ->     WHERE harga_jual < (SELECT AVG(harga_jual) FROM produk);
+---------------+---------------+----------------+-----------------+
| jumlah_produk | harga_minimal | harga_maksimal | rata_rata_harga |
+---------------+---------------+----------------+-----------------+
|            10 |          6999 |        1100000 |        600699.9 |
+---------------+---------------+----------------+-----------------+
7.	Tampilkan data pelanggan yang memiliki kartu dimana diskon kartu yang diberikan diatas 3%
SELECT p.id, p.nama_pelanggan, k.kode, k.diskon
    -> FROM pelanggan p
    -> JOIN kartu k ON p.kartu_id = k.id
    -> WHERE k.diskon > 0.03;
Empty set (0.001 sec)